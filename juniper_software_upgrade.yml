---
- name: Playbook for upgrading the Junos Routers
  hosts: all
  connection: local
  gather_facts: no
  roles:
    - Juniper.junos 
  vars_prompt:
    - name: juniper_junos_facts_config_format
      prompt: "Please enter ther format for the device configuration(xml, json, set, text): "
      default: xml      
  tasks:

    # This block gathers the router facts/info.
    - block:
      # This task gathers the router facts/info. No configuration data will be gathered.
      - import_tasks: tasks/facts/gather_facts_without_config.yml

    # This block only intimates the user about the aborting the play for the device having only 1 RE.
    # Note: The condition/logic for skipping the remaining tasks is in next block. This block will not make the remaining tasks to skip.
    - block:
      # This Task print the abort message for single RE routers.
      - import_tasks: tasks/display/message.yml 
          message_to_display: "Aborting the play for host {{ inventory_hostname }} as it has only one Routing engine. Remaining Tasks will get Skipped for this host."
          message_task_name: "Message for aborting in case of Single RE"
      when: not ansible_facts.junos.has_2RE
 
    # This blocks continues the process of software upgrade for routers having 2 REs. 
    # It will skip all tasks if having only one RE.
    - block:
      # This task validates the admin and oper status of both physical and logical interfaces to be up.      
      - import_tasks: tasks/jsnapy/tests_generator/validate_interface_status.yml 

      # This task validates the admin and oper status of both physical and logical interfaces to be up.
      # it uses the Jsnapy test file generated generated by previous task.
      - name: Test against the conditions only
        juniper_junos_jsnapy:
          action: "snapcheck"
          test_files: jsnapy_tests/validations/validate_interface_status.yml 
#        test_files: jsnapy_tests/show_gbp_summary.yml
      when: ansible_facts.junos.has_2RE
